syntax = "proto3";
// import "proto/include/google/protobuf/any.proto";
package rbac;

service GrpcService {
  rpc ListGrpcServer(FindRequest) returns (stream Rbac) {}
  rpc ListServicesWithFullPath(FindRequest) returns (stream Rbac) {}
  rpc ListMethodsWithFullPath(FindRequest) returns (stream Rbac) {}
  rpc GetServiceListOnServer(FindRequest) returns (stream Rbac) {}
  rpc getMethodsListInService(FindRequest) returns (stream Rbac) {}
}

service RoleService {
  rpc ListRole(FindRequest) returns (stream Role) {}
  rpc GetOneRole(GetRequest) returns (Role) {}
  rpc CreateRole(Role) returns (Role) {}
  rpc UpdateRoleById(GetRequest) returns (Role) {}
  rpc DeleteRole(FindRequest) returns (DeleteResult) {}
  rpc DeleteRoleById(GetRequest) returns (DeleteResult) {}
  rpc AddAccessToRoleByRid(Role) returns (Role) {}
  rpc DelAccessToRoleByRid(Role) returns (Role) {}
}

service GroupService {
  rpc ListGroup(FindRequest) returns (stream Group) {}
  rpc GetOneGroup(GetRequest) returns (Group) {}
  rpc CreateGroup(Group) returns (Group) {}
  rpc UpdateGroupById(GetRequest) returns (Group) {}
  rpc DeleteGroup(FindRequest) returns (DeleteResult) {}
  rpc DeleteGroupById(GetRequest) returns (DeleteResult) {}
  rpc AddRoleIdsToGroupByGid(Group) returns (Group) {}
  rpc DelRoleIdsToGroupByGid(Group) returns (Group) {}
}

service RbacService {
  // your model Requests
  rpc FindRbacList(FindRequest) returns (stream Rbac) {}
  rpc GetRbacById(GetRequest) returns (Rbac) {}
  rpc CreateRbac(CreateRbacRequest) returns (Rbac) {}
  rpc UpdateRbac(UpdateRbacRequest) returns (Rbac) {}
  rpc UpdateRbacById(UpdateRbacByIdRequest) returns (Rbac) {}
  rpc DeleteRbac(FindRequest) returns (DeleteResult) {}
  rpc DeleteRbacById(GetRequest) returns (DeleteResult) {}
  rpc VerifyAccessRight(Role) returns (Role) {}
}

message FindRequest { string query = 1; }

message GetRequest {
  string id = 1;
  string query = 2;
}

message CreateRbacRequest { string name = 1; }

message UpdateRbacRequest {
  string query = 1;
  CreateRbacRequest obj = 2;
}

message UpdateRbacByIdRequest {
  string id = 1;
  CreateRbacRequest obj = 2;
}

message DeleteResult {
  bool state = 1;
  int32 num = 2;
}

message Role {
  string id = 1;
  string name = 2;
  string createdAt = 13;
  string updatedAt = 14;
  string deletedAt = 15;
}

message Group {
  string id = 1;
  string name = 2;
  string createdAt = 13;
  string updatedAt = 14;
  string deletedAt = 15;
}

message Rbac {
  string id = 1;
  string name = 2;
  string createdAt = 13;
  string updatedAt = 14;
  string deletedAt = 15;
}